package cl.akzio.auth.central.obtenercapacidadfabrica.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.sun.tools.xjc.Driver;

import cl.akzio.auth.central.obtenercapacidadfabrica.DTO.ProyectoDTO;


public class ProyectoMySqlDAO  implements ProyectoDAO{
	
	private Connection conn;
	
	public void GenerarConexion() throws SQLException {
		String jdbc = "jdbc:mysql://localhost:3306/gestion_proyectos";
		conn = DriverManager.getConnection(jdbc,"gest_proys", "ges131Qft");
	
	}


	
	/**
	 * @param conn
	 */
	public ProyectoMySqlDAO(Connection conn) {
		super();
		this.conn = conn;
	}



	final String GETPRO=""
			+ "select "
					+ "pro.codi_proyecto,"
					+ "pro.codi_redmine,"
					+ "pro.nomb_proyecto,"
					+ "sol.codi_solicitud"
			+ "from"
					+ "fab_neg_solicitud sol,"
					+ "pro_neg_proyecto pro,"
					+ "fab_mae_fabrica fab,"
					+ "pro_mae_estadoproyecto epro,"
					+ "fab_mae_estadosolicitud esol"
			+ "where"
					+ "pro.codi_proyecto=sol.codi_proyecto"
					+ "and pro.codi_estado=epro.codi_estado"
					+ "and sol.codi_estado=esol.codi_estado"
					+ "and sol.codi_fabrica= fab.codi_fabrica"
					+ "and fab.codi_fabrica=1"
					+ "and epro.codi_estado=2"
					+ "and esol.codi_estado<>5"
					+ "and pro.corr_seq=(select max(pro2.corr_seq) from pro_neg_proyecto pro2 where pro.codi_proyecto=pro2.codi_proyecto)";
			
	
	
	
	
	/**
	 * 
	 */
	public ProyectoMySqlDAO() {
		super();
	}



	private ProyectoDTO convertir(ResultSet rs) throws SQLException {
		int codiProyecto=rs.getInt("codi_proyecto");
		String codiRedmine=rs.getString("codi_redmine");
		String nombProyecto=rs.getString("nomb_proyecto");
		int codiSolicitud=rs.getInt("codi_solicitud");
		ProyectoDTO proyecto =new ProyectoDTO(codiProyecto, codiRedmine, nombProyecto, codiSolicitud);
		
		return proyecto;
	}
	@Override
	public List<ProyectoDTO> getProyecto() throws SQLException {
		PreparedStatement stat = null;
		ResultSet rs =null;
		List<ProyectoDTO> proyecto =new ArrayList<>();
		try {
			
			stat=conn.prepareStatement(GETPRO);
			
			rs= stat.executeQuery();
			
			while(rs.next()){
				proyecto.add(convertir(rs));
			}
			
		} catch (Exception e) {
			// TODO: handle exception
		}finally{
			if (rs!= null) {
				try {
					rs.close();
				} catch (Exception e2) {
					System.out.println("asdf");
				}
			}
			if (stat != null) {
			  try {
				stat.close();
			} catch (Exception e2) {
				System.out.println("asdf");
			}
			}
			
		}
		
		
		return proyecto;
	}
	public void close() throws SQLException{
		if (conn !=null){
			conn.close();
		}
	}

}
